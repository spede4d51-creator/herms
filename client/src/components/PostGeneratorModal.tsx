import React, { useState } from 'react';
import { X, Brain, Send, Copy, Check, Zap, Target, Sparkles } from 'lucide-react';

interface Post {
  id: string;
  content: string;
  platform: string;
  engagementRate: number;
  likes: number;
  shares: number;
  comments: number;
}

interface PostGeneratorModalProps {
  isOpen: boolean;
  onClose: () => void;
  selectedPosts: Post[];
}

export const PostGeneratorModal: React.FC<PostGeneratorModalProps> = ({
  isOpen,
  onClose,
  selectedPosts
}) => {
  const [prompt, setPrompt] = useState('');
  const [platform, setPlatform] = useState('LinkedIn');
  const [tone, setTone] = useState('professional');
  const [generatedPost, setGeneratedPost] = useState('');
  const [isGenerating, setIsGenerating] = useState(false);
  const [copied, setCopied] = useState(false);

  const platforms = [
    { value: 'LinkedIn', label: 'LinkedIn', limit: 3000 },
    { value: 'Twitter', label: 'Twitter', limit: 280 },
    { value: 'Facebook', label: 'Facebook', limit: 2000 },
    { value: 'Instagram', label: 'Instagram', limit: 1500 }
  ];

  const tones = [
    { value: 'professional', label: '–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π' },
    { value: 'casual', label: '–ù–µ—Ñ–æ—Ä–º–∞–ª—å–Ω—ã–π' },
    { value: 'humorous', label: '–° —é–º–æ—Ä–æ–º' },
    { value: 'inspiring', label: '–í–¥–æ—Ö–Ω–æ–≤–ª—è—é—â–∏–π' },
    { value: 'educational', label: '–û–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã–π' }
  ];

  const generatePost = async () => {
    setIsGenerating(true);
    
    // –ò–º–∏—Ç–∞—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–æ—Å—Ç–∞ —á–µ—Ä–µ–∑ AI
    setTimeout(() => {
      const mockGeneratedPost = `üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–æ–≤—É—é —ç—Ä—É —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞–º–∏!

–ü–æ—Å–ª–µ –∞–Ω–∞–ª–∏–∑–∞ ${selectedPosts.length} —É—Å–ø–µ—à–Ω—ã—Ö –ø–æ—Å—Ç–æ–≤ –Ω–∞—à–∏—Ö –∫–æ–ª–ª–µ–≥, –º—ã –ø–æ–Ω—è–ª–∏: –≥–ª–∞–≤–Ω–æ–µ ‚Äî —ç—Ç–æ –Ω–µ —Ç–æ–ª—å–∫–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å, –Ω–æ –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –æ–ø—ã—Ç.

${prompt}

–ù–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞–¥ —Å–æ–∑–¥–∞–Ω–∏–µ–º –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞, –∫–æ—Ç–æ—Ä—ã–π –æ–±—ä–µ–¥–∏–Ω—è–µ—Ç:
‚úÖ –ò–Ω—Ç—É–∏—Ç–∏–≤–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
‚úÖ –ú–æ—â–Ω—É—é –∞–Ω–∞–ª–∏—Ç–∏–∫—É
‚úÖ Seamless –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏
‚úÖ AI-–ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏

–ß—Ç–æ –¥–ª—è –≤–∞—Å —Å–∞–º–æ–µ –≤–∞–∂–Ω–æ–µ –≤ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞—Ö —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞–º–∏?

#ProjectManagement #Innovation #SaaS #TeamWork`;

      setGeneratedPost(mockGeneratedPost);
      setIsGenerating(false);
    }, 2000);
  };

  const copyToClipboard = async () => {
    try {
      await navigator.clipboard.writeText(generatedPost);
      setCopied(true);
      setTimeout(() => setCopied(false), 2000);
    } catch (err) {
      console.error('Failed to copy text:', err);
    }
  };

  if (!isOpen) return null;

  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4">
      <div className="bg-white rounded-xl shadow-2xl w-full max-w-4xl max-h-[90vh] overflow-y-auto">
        <div className="flex items-center justify-between p-6 border-b border-gray-200">
          <h2 className="text-xl font-semibold text-gray-900 flex items-center space-x-2">
            <Brain className="w-5 h-5" />
            <span>–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–æ—Å—Ç–∞ —Å –ø–æ–º–æ—â—å—é –ò–ò</span>
          </h2>
          <button
            onClick={onClose}
            className="p-2 text-gray-400 hover:text-gray-600 hover:bg-gray-100 rounded-lg transition-colors"
          >
            <X className="w-5 h-5" />
          </button>
        </div>

        <div className="p-6">
          <div className="grid grid-cols-1 lg:grid-cols-2 gap-8">
            {/* Left Side - Input */}
            <div className="space-y-6">
              {/* Selected Posts */}
              <div>
                <h3 className="text-lg font-medium text-gray-900 mb-3">
                  –í—ã–±—Ä–∞–Ω–Ω—ã–µ –ø–æ—Å—Ç—ã –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ ({selectedPosts.length})
                </h3>
                <div className="max-h-48 overflow-y-auto space-y-3">
                  {selectedPosts.map(post => (
                    <div key={post.id} className="bg-gray-50 rounded-lg p-4">
                      <div className="flex items-center justify-between mb-2">
                        <span className="bg-blue-100 text-blue-800 px-2 py-1 rounded-full text-xs">
                          {post.platform}
                        </span>
                        <span className="text-xs text-gray-500">
                          {post.engagementRate}% –≤–æ–≤–ª–µ—á–µ–Ω–Ω–æ—Å—Ç—å
                        </span>
                      </div>
                      <p className="text-sm text-gray-700 line-clamp-3">{post.content}</p>
                    </div>
                  ))}
                </div>
              </div>

              {/* Platform Selection */}
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞</label>
                <select
                  value={platform}
                  onChange={(e) => setPlatform(e.target.value)}
                  className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500"
                >
                  {platforms.map(p => (
                    <option key={p.value} value={p.value}>
                      {p.label} (–º–∞–∫—Å. {p.limit} —Å–∏–º–≤–æ–ª–æ–≤)
                    </option>
                  ))}
                </select>
              </div>

              {/* Tone Selection */}
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">–¢–æ–Ω —Å–æ–æ–±—â–µ–Ω–∏—è</label>
                <select
                  value={tone}
                  onChange={(e) => setTone(e.target.value)}
                  className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500"
                >
                  {tones.map(t => (
                    <option key={t.value} value={t.value}>{t.label}</option>
                  ))}
                </select>
              </div>

              {/* Custom Prompt */}
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  –í–∞—à –ø—Ä–æ–º–ø—Ç
                </label>
                <textarea
                  value={prompt}
                  onChange={(e) => setPrompt(e.target.value)}
                  rows={6}
                  className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 resize-none"
                  placeholder="–û–ø–∏—à–∏—Ç–µ, –æ —á–µ–º –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–æ—Å—Ç. –ò–ò –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –ø–æ—Å—Ç—ã –∏ —Å–æ–∑–¥–∞—Å—Ç –Ω–æ–≤—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤–∞—à–∏—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π..."
                />
              </div>

              {/* Generate Button */}
              <button
                onClick={generatePost}
                disabled={isGenerating || !prompt.trim()}
                className="w-full bg-gradient-to-r from-purple-500 to-purple-600 hover:from-purple-600 hover:to-purple-700 text-white px-6 py-3 rounded-lg flex items-center justify-center space-x-2 transition-all duration-200 disabled:opacity-50 disabled:cursor-not-allowed"
              >
                {isGenerating ? (
                  <>
                    <Brain className="w-5 h-5 animate-pulse" />
                    <span>–ì–µ–Ω–µ—Ä–∏—Ä—É—é...</span>
                  </>
                ) : (
                  <>
                    <Sparkles className="w-5 h-5" />
                    <span>–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –ø–æ—Å—Ç</span>
                  </>
                )}
              </button>
            </div>

            {/* Right Side - Output */}
            <div className="space-y-6">
              <div>
                <div className="flex items-center justify-between mb-3">
                  <h3 className="text-lg font-medium text-gray-900">–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ—Å—Ç</h3>
                  {generatedPost && (
                    <button
                      onClick={copyToClipboard}
                      className="flex items-center space-x-2 px-3 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600 transition-colors"
                    >
                      {copied ? <Check className="w-4 h-4" /> : <Copy className="w-4 h-4" />}
                      <span>{copied ? '–°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ' : '–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å'}</span>
                    </button>
                  )}
                </div>
                
                <div className="bg-gray-50 rounded-lg p-6 min-h-80">
                  {isGenerating ? (
                    <div className="flex flex-col items-center justify-center h-64 text-center">
                      <Brain className="w-12 h-12 text-purple-500 animate-pulse mb-4" />
                      <h4 className="text-lg font-medium text-gray-900 mb-2">–ò–ò –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –ø–æ—Å—Ç—ã</h4>
                      <p className="text-gray-600">–°–æ–∑–¥–∞—é —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤–∞—à–∏—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π...</p>
                    </div>
                  ) : generatedPost ? (
                    <div>
                      <div className="bg-white rounded-lg p-4 border border-gray-200 mb-4">
                        <div className="flex items-center justify-between mb-3">
                          <span className="bg-blue-100 text-blue-800 px-2 py-1 rounded-full text-xs font-medium">
                            {platform}
                          </span>
                          <span className="text-sm text-gray-500">
                            {generatedPost.length} / {platforms.find(p => p.value === platform)?.limit} —Å–∏–º–≤–æ–ª–æ–≤
                          </span>
                        </div>
                        <div className="prose prose-sm max-w-none">
                          <pre className="whitespace-pre-wrap font-sans text-gray-900 leading-relaxed">
                            {generatedPost}
                          </pre>
                        </div>
                      </div>
                      
                      {/* Post Metrics Prediction */}
                      <div className="bg-green-50 border border-green-200 rounded-lg p-4">
                        <h4 className="text-sm font-medium text-green-800 mb-2">–ü—Ä–æ–≥–Ω–æ–∑ –º–µ—Ç—Ä–∏–∫</h4>
                        <div className="grid grid-cols-3 gap-4 text-sm">
                          <div className="text-center">
                            <div className="text-lg font-bold text-green-800">156</div>
                            <div className="text-green-600">–õ–∞–π–∫–∏</div>
                          </div>
                          <div className="text-center">
                            <div className="text-lg font-bold text-green-800">23</div>
                            <div className="text-green-600">–†–µ–ø–æ—Å—Ç—ã</div>
                          </div>
                          <div className="text-center">
                            <div className="text-lg font-bold text-green-800">4.2%</div>
                            <div className="text-green-600">–í–æ–≤–ª–µ—á–µ–Ω–Ω–æ—Å—Ç—å</div>
                          </div>
                        </div>
                      </div>
                    </div>
                  ) : (
                    <div className="flex flex-col items-center justify-center h-64 text-center">
                      <Target className="w-12 h-12 text-gray-300 mb-4" />
                      <h4 className="text-lg font-medium text-gray-900 mb-2">–ì–æ—Ç–æ–≤ –∫ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏</h4>
                      <p className="text-gray-600">–î–æ–±–∞–≤—å—Ç–µ –≤–∞—à –ø—Ä–æ–º–ø—Ç –∏ –Ω–∞–∂–º–∏—Ç–µ "–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –ø–æ—Å—Ç"</p>
                    </div>
                  )}
                </div>
              </div>

              {/* AI Tips */}
              <div className="bg-blue-50 border border-blue-200 rounded-lg p-4">
                <h4 className="text-sm font-medium text-blue-800 mb-2">üí° –°–æ–≤–µ—Ç—ã –¥–ª—è –ª—É—á—à–µ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞</h4>
                <ul className="text-sm text-blue-700 space-y-1">
                  <li>‚Ä¢ –ë—É–¥—å—Ç–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º–∏ –≤ –æ–ø–∏—Å–∞–Ω–∏–∏ —Ç–µ–º—ã</li>
                  <li>‚Ä¢ –£–∫–∞–∂–∏—Ç–µ —Ü–µ–ª–µ–≤—É—é –∞—É–¥–∏—Ç–æ—Ä–∏—é</li>
                  <li>‚Ä¢ –î–æ–±–∞–≤—å—Ç–µ call-to-action</li>
                  <li>‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –≤–∞—à–µ–π –Ω–∏—à–∏</li>
                </ul>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};